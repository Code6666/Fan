apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion build_versions.compile_sdk

    defaultConfig libDefaultConfig

    dataBinding {
        enabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api deps.androidx.recyclerview
    api deps.androidx.core_ktx
    api deps.androidx.appcompat
    api deps.androidx.legacy
    //lifecycle组件
    api deps.lifecycle.viewmodel
    api deps.lifecycle.extensions
    api(deps.room.runtime) {
        exclude group: 'androidx.arch.core'
    }
    api deps.room.rxjava2
//    navigation组件
    api deps.navigation.fragment_ktx
    api deps.navigation.ui_ktx
    //常用布局
    api deps.androidx.constraintlayout
    //kotlin
    api deps.kotlin.stdlib

    //rx网络框架
    api(deps.retrofit.runtime)
    api(deps.retrofit.gson)
    api(deps.retrofit.rxjava2)
    api(deps.rxjava.rxlifecycle) {
        exclude group: 'com.android.support'
    }
    api(deps.rxjava.rxbinding) {
        exclude group: 'androidx.annotation'
        exclude group: 'androidx.core'
        exclude group: 'io.reactivex.rxjava2'
    }
    api(deps.rxjava.rxlifecycle) {
        exclude group: 'com.android.support'
    }
    //热修复
    api(deps.tinker.lib) { changing = true }

    //组件化
    api deps.alibaba.router
    //云数据库bmob
    api deps.bmob
    //图片加载框架
    api deps.glide.runtime
    //图片选择框架
    api deps.matisse

    //内存泄漏检测
    debugApi deps.leakcanary.android
    releaseApi deps.leakcanary.android_no_op
    debugApi deps.leakcanary.support_fragment

    api deps.BaseRecyclerView
    //sp
    api deps.mmkv
    //bugly
    api deps.bugly
}

repositories {
    google()
}
